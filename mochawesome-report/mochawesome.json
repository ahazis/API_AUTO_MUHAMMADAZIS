{
  "stats": {
    "suites": 1,
    "tests": 4,
    "passes": 4,
    "pending": 0,
    "failures": 0,
    "start": "2024-08-16T09:30:14.645Z",
    "end": "2024-08-16T09:30:16.137Z",
    "duration": 1492,
    "testsRegistered": 4,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "ec19196e-9bc8-4871-9b4e-19c084b51283",
      "title": "",
      "fullFile": "C:\\Users\\lenov\\OneDrive\\Desktop\\E-learning\\Pert 7\\API test automation\\ApiAuto\\test\\testAPI.js",
      "file": "\\test\\testAPI.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f730dbc2-9a0a-4e16-8adb-1be4ebeae47f",
          "title": "Test Suite 1",
          "fullFile": "C:\\Users\\lenov\\OneDrive\\Desktop\\E-learning\\Pert 7\\API test automation\\ApiAuto\\test\\testAPI.js",
          "file": "\\test\\testAPI.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Test Case 1: Get All User",
              "fullTitle": "Test Suite 1 Test Case 1: Get All User",
              "timedOut": false,
              "duration": 141,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request(BASE_URL)\n    .get('/api/users?page=2')\nconsole.log('Status:', response.status);\n// console.log('Response Body:', response.body);\n       \n// assertion\nassert.equal(response.status, 200)\nassert.equal(response.body.data[0].id, 7)\nassert.jsonSchema(response.body, getlist);\n// expect\nexpect(response.status).to.equal(200)\n//",
              "err": {},
              "uuid": "12645463-bc6a-4d4f-b7ec-03ce6ce196f8",
              "parentUUID": "f730dbc2-9a0a-4e16-8adb-1be4ebeae47f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test Case 2: Post Register - successful",
              "fullTitle": "Test Suite 1 Test Case 2: Post Register - successful",
              "timedOut": false,
              "duration": 422,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const bodyPost = {\n    \"email\": \"eve.holt@reqres.in\",\n    \"password\": \"pistol\"\n}\n    const response = await request(BASE_URL)\n    .post('/api/register')\n    .send(bodyPost)\nconsole.log('Status:', response.status);\n// console.log('Response Body:', response.body);\n       \n// assertion\nassert.equal(response.status, 200)\nassert.equal(response.body.id, 4)\nassert.equal(response.body.token, 'QpwL5tke4Pnpja7X4')\nassert.jsonSchema(response.body, postregister);",
              "err": {},
              "uuid": "9665b49f-42c4-4e45-bb0d-c4d58ea0822f",
              "parentUUID": "f730dbc2-9a0a-4e16-8adb-1be4ebeae47f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test Case 3: Delete",
              "fullTitle": "Test Suite 1 Test Case 3: Delete",
              "timedOut": false,
              "duration": 481,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request(BASE_URL)\n    .delete('/api/user/2')\nconsole.log('Status:', response.status);        \n// console.log('Response Body:', response.body);\n       \n// assertion\nassert.equal(response.status, 204)\nassert.jsonSchema(response.body, deleteUser);",
              "err": {},
              "uuid": "8b09eaae-0298-45f0-b767-05f51081abcc",
              "parentUUID": "f730dbc2-9a0a-4e16-8adb-1be4ebeae47f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test Case 4: Put - Update User",
              "fullTitle": "Test Suite 1 Test Case 4: Put - Update User",
              "timedOut": false,
              "duration": 443,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const bodyPut = {\n    \"name\": \"morpheus\",\n    \"job\": \"zion resident\"\n}\nconst response = await request(BASE_URL)\n    .put('/api/user/2')\n    .send(bodyPut)\nconsole.log('Status:', response.status);        \n// console.log('Response Body:', response.body);\n       \n// assertion\nassert.equal(response.status, 200)\nassert.jsonSchema(response.body, putUser);",
              "err": {},
              "uuid": "27b8ea81-7962-40cb-b7fc-c4ddf6ac2136",
              "parentUUID": "f730dbc2-9a0a-4e16-8adb-1be4ebeae47f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "12645463-bc6a-4d4f-b7ec-03ce6ce196f8",
            "9665b49f-42c4-4e45-bb0d-c4d58ea0822f",
            "8b09eaae-0298-45f0-b767-05f51081abcc",
            "27b8ea81-7962-40cb-b7fc-c4ddf6ac2136"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1487,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.7.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}